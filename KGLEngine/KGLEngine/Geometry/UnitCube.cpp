// Developed by Kelin Lyu.
#include "Geometry.hpp"
UnitCube::UnitCube() {
    this->engineInitializeGeometry();
    vector<GeometryVertex> vertices;
    vector<unsigned int> indices;
    GeometryVertex vertex1 = GeometryVertex();
    vertex1.position = vec3(0.5f, -0.5f, 0.5f);
    vertex1.normal = vec3(0.0f, -1.0f, 0.0f);
    vertex1.uv = vec2(0.0f, 1.0f);
    vertex1.tangent = vec3(-1.0f, 0.0f, 0.0f);
    vertex1.bitangent = vec3(0.0f, 0.0f, 1.0f);
    vertices.push_back(vertex1);
    GeometryVertex vertex2 = GeometryVertex();
    vertex2.position = vec3(-0.5f, -0.5f, 0.5f);
    vertex2.normal = vec3(0.0f, -1.0f, 0.0f);
    vertex2.uv = vec2(1.0f, 1.0f);
    vertex2.tangent = vec3(-1.0f, 0.0f, 0.0f);
    vertex2.bitangent = vec3(0.0f, 0.0f, 1.0f);
    vertices.push_back(vertex2);
    GeometryVertex vertex3 = GeometryVertex();
    vertex3.position = vec3(-0.5f, -0.5f, -0.5f);
    vertex3.normal = vec3(0.0f, -1.0f, 0.0f);
    vertex3.uv = vec2(1.0f, 0.0f);
    vertex3.tangent = vec3(-1.0f, 0.0f, 0.0f);
    vertex3.bitangent = vec3(0.0f, 0.0f, 1.0f);
    vertices.push_back(vertex3);
    GeometryVertex vertex4 = GeometryVertex();
    vertex4.position = vec3(0.5f, -0.5f, -0.5f);
    vertex4.normal = vec3(0.0f, -1.0f, 0.0f);
    vertex4.uv = vec2(0.0f, 0.0f);
    vertex4.tangent = vec3(-1.0f, 0.0f, 0.0f);
    vertex4.bitangent = vec3(0.0f, 0.0f, 1.0f);
    vertices.push_back(vertex4);
    GeometryVertex vertex5 = GeometryVertex();
    vertex5.position = vec3(0.5f, -0.5f, -0.5f);
    vertex5.normal = vec3(0.0f, 0.0f, -1.0f);
    vertex5.uv = vec2(0.0f, 1.0f);
    vertex5.tangent = vec3(-1.0f, 0.0f, 0.0f);
    vertex5.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex5);
    GeometryVertex vertex6 = GeometryVertex();
    vertex6.position = vec3(-0.5f, -0.5f, -0.5f);
    vertex6.normal = vec3(0.0f, 0.0f, -1.0f);
    vertex6.uv = vec2(1.0f, 1.0f);
    vertex6.tangent = vec3(-1.0f, 0.0f, 0.0f);
    vertex6.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex6);
    GeometryVertex vertex7 = GeometryVertex();
    vertex7.position = vec3(-0.5f, 0.5f, -0.5f);
    vertex7.normal = vec3(0.0f, 0.0f, -1.0f);
    vertex7.uv = vec2(1.0f, 0.0f);
    vertex7.tangent = vec3(-1.0f, 0.0f, 0.0f);
    vertex7.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex7);
    GeometryVertex vertex8 = GeometryVertex();
    vertex8.position = vec3(0.5f, 0.5f, -0.5f);
    vertex8.normal = vec3(0.0f, 0.0f, -1.0f);
    vertex8.uv = vec2(0.0f, 0.0f);
    vertex8.tangent = vec3(-1.0f, 0.0f, 0.0f);
    vertex8.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex8);
    GeometryVertex vertex9 = GeometryVertex();
    vertex9.position = vec3(-0.5f, -0.5f, 0.5f);
    vertex9.normal = vec3(0.0f, 0.0f, 1.0f);
    vertex9.uv = vec2(0.0f, 1.0f);
    vertex9.tangent = vec3(1.0f, 0.0f, 0.0f);
    vertex9.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex9);
    GeometryVertex vertex10 = GeometryVertex();
    vertex10.position = vec3(0.5f, -0.5f, 0.5f);
    vertex10.normal = vec3(0.0f, 0.0f, 1.0f);
    vertex10.uv = vec2(1.0f, 1.0f);
    vertex10.tangent = vec3(1.0f, 0.0f, 0.0f);
    vertex10.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex10);
    GeometryVertex vertex11 = GeometryVertex();
    vertex11.position = vec3(0.5f, 0.5f, 0.5f);
    vertex11.normal = vec3(0.0f, 0.0f, 1.0f);
    vertex11.uv = vec2(1.0f, 0.0f);
    vertex11.tangent = vec3(1.0f, 0.0f, 0.0f);
    vertex11.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex11);
    GeometryVertex vertex12 = GeometryVertex();
    vertex12.position = vec3(-0.5f, 0.5f, 0.5f);
    vertex12.normal = vec3(0.0f, 0.0f, 1.0f);
    vertex12.uv = vec2(0.0f, 0.0f);
    vertex12.tangent = vec3(1.0f, 0.0f, 0.0f);
    vertex12.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex12);
    GeometryVertex vertex13 = GeometryVertex();
    vertex13.position = vec3(-0.5f, 0.5f, 0.5f);
    vertex13.normal = vec3(0.0f, 1.0f, 0.0f);
    vertex13.uv = vec2(0.0f, 1.0f);
    vertex13.tangent = vec3(1.0f, 0.0f, 0.0f);
    vertex13.bitangent = vec3(0.0f, 0.0f, 1.0f);
    vertices.push_back(vertex13);
    GeometryVertex vertex14 = GeometryVertex();
    vertex14.position = vec3(0.5f, 0.5f, 0.5f);
    vertex14.normal = vec3(0.0f, 1.0f, 0.0f);
    vertex14.uv = vec2(1.0f, 1.0f);
    vertex14.tangent = vec3(1.0f, 0.0f, 0.0f);
    vertex14.bitangent = vec3(0.0f, 0.0f, 1.0f);
    vertices.push_back(vertex14);
    GeometryVertex vertex15 = GeometryVertex();
    vertex15.position = vec3(0.5f, 0.5f, -0.5f);
    vertex15.normal = vec3(0.0f, 1.0f, 0.0f);
    vertex15.uv = vec2(1.0f, 0.0f);
    vertex15.tangent = vec3(1.0f, 0.0f, 0.0f);
    vertex15.bitangent = vec3(0.0f, 0.0f, 1.0f);
    vertices.push_back(vertex15);
    GeometryVertex vertex16 = GeometryVertex();
    vertex16.position = vec3(-0.5f, 0.5f, -0.5f);
    vertex16.normal = vec3(0.0f, 1.0f, 0.0f);
    vertex16.uv = vec2(0.0f, 0.0f);
    vertex16.tangent = vec3(1.0f, 0.0f, 0.0f);
    vertex16.bitangent = vec3(0.0f, 0.0f, 1.0f);
    vertices.push_back(vertex16);
    GeometryVertex vertex17 = GeometryVertex();
    vertex17.position = vec3(0.5f, -0.5f, 0.5f);
    vertex17.normal = vec3(1.0f, 0.0f, 0.0f);
    vertex17.uv = vec2(0.0f, 1.0f);
    vertex17.tangent = vec3(0.0f, 0.0f, -1.0f);
    vertex17.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex17);
    GeometryVertex vertex18 = GeometryVertex();
    vertex18.position = vec3(0.5f, -0.5f, -0.5f);
    vertex18.normal = vec3(1.0f, 0.0f, 0.0f);
    vertex18.uv = vec2(1.0f, 1.0f);
    vertex18.tangent = vec3(0.0f, 0.0f, -1.0f);
    vertex18.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex18);
    GeometryVertex vertex19 = GeometryVertex();
    vertex19.position = vec3(0.5f, 0.5f, -0.5f);
    vertex19.normal = vec3(1.0f, 0.0f, 0.0f);
    vertex19.uv = vec2(1.0f, 0.0f);
    vertex19.tangent = vec3(0.0f, 0.0f, -1.0f);
    vertex19.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex19);
    GeometryVertex vertex20 = GeometryVertex();
    vertex20.position = vec3(0.5f, 0.5f, 0.5f);
    vertex20.normal = vec3(1.0f, 0.0f, 0.0f);
    vertex20.uv = vec2(0.0f, 0.0f);
    vertex20.tangent = vec3(0.0f, 0.0f, -1.0f);
    vertex20.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex20);
    GeometryVertex vertex21 = GeometryVertex();
    vertex21.position = vec3(-0.5f, -0.5f, -0.5f);
    vertex21.normal = vec3(-1.0f, 0.0f, 0.0f);
    vertex21.uv = vec2(0.0f, 1.0f);
    vertex21.tangent = vec3(0.0f, 0.0f, 1.0f);
    vertex21.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex21);
    GeometryVertex vertex22 = GeometryVertex();
    vertex22.position = vec3(-0.5f, -0.5f, 0.5f);
    vertex22.normal = vec3(-1.0f, 0.0f, 0.0f);
    vertex22.uv = vec2(1.0f, 1.0f);
    vertex22.tangent = vec3(0.0f, 0.0f, 1.0f);
    vertex22.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex22);
    GeometryVertex vertex23 = GeometryVertex();
    vertex23.position = vec3(-0.5f, 0.5f, 0.5f);
    vertex23.normal = vec3(-1.0f, 0.0f, 0.0f);
    vertex23.uv = vec2(1.0f, 0.0f);
    vertex23.tangent = vec3(0.0f, 0.0f, 1.0f);
    vertex23.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex23);
    GeometryVertex vertex24 = GeometryVertex();
    vertex24.position = vec3(-0.5f, 0.5f, -0.5f);
    vertex24.normal = vec3(-1.0f, 0.0f, 0.0f);
    vertex24.uv = vec2(0.0f, 0.0f);
    vertex24.tangent = vec3(0.0f, 0.0f, 1.0f);
    vertex24.bitangent = vec3(0.0f, -1.0f, 0.0f);
    vertices.push_back(vertex24);
    indices.push_back(0);
    indices.push_back(1);
    indices.push_back(2);
    indices.push_back(0);
    indices.push_back(2);
    indices.push_back(3);
    indices.push_back(4);
    indices.push_back(5);
    indices.push_back(6);
    indices.push_back(4);
    indices.push_back(6);
    indices.push_back(7);
    indices.push_back(8);
    indices.push_back(9);
    indices.push_back(10);
    indices.push_back(8);
    indices.push_back(10);
    indices.push_back(11);
    indices.push_back(12);
    indices.push_back(13);
    indices.push_back(14);
    indices.push_back(12);
    indices.push_back(14);
    indices.push_back(15);
    indices.push_back(16);
    indices.push_back(17);
    indices.push_back(18);
    indices.push_back(16);
    indices.push_back(18);
    indices.push_back(19);
    indices.push_back(20);
    indices.push_back(21);
    indices.push_back(22);
    indices.push_back(20);
    indices.push_back(22);
    indices.push_back(23);
    this->indiceCount = (unsigned int)indices.size();
    glGenVertexArrays(1, &this->vertexArrays);
    glGenBuffers(1, &this->vertexBuffers);
    glGenBuffers(1, &this->elementBuffers);
    glBindVertexArray(this->vertexArrays);
    glBindBuffer(GL_ARRAY_BUFFER, this->vertexBuffers);
    glBufferData(GL_ARRAY_BUFFER, vertices.size() * sizeof(GeometryVertex), &vertices[0], GL_STATIC_DRAW);
    glBindBuffer(GL_ELEMENT_ARRAY_BUFFER, this->elementBuffers);
    glBufferData(GL_ELEMENT_ARRAY_BUFFER, indices.size() * sizeof(unsigned int), &indices[0], GL_STATIC_DRAW);
    glEnableVertexAttribArray(0);
    glVertexAttribPointer(0, 3, GL_FLOAT, GL_FALSE, sizeof(GeometryVertex), (void*)0);
    glEnableVertexAttribArray(1);
    glVertexAttribPointer(1, 3, GL_FLOAT, GL_FALSE, sizeof(GeometryVertex), (void*)offsetof(GeometryVertex, normal));
    glEnableVertexAttribArray(2);
    glVertexAttribPointer(2, 2, GL_FLOAT, GL_FALSE, sizeof(GeometryVertex), (void*)offsetof(GeometryVertex, uv));
    glEnableVertexAttribArray(3);
    glVertexAttribPointer(3, 3, GL_FLOAT, GL_FALSE, sizeof(GeometryVertex), (void*)offsetof(GeometryVertex, tangent));
    glEnableVertexAttribArray(4);
    glVertexAttribPointer(4, 3, GL_FLOAT, GL_FALSE, sizeof(GeometryVertex), (void*)offsetof(GeometryVertex, bitangent));
    glEnableVertexAttribArray(5);
    glVertexAttribIPointer(5, 4, GL_INT, sizeof(GeometryVertex), (void*)offsetof(GeometryVertex, boneIDs));
    glEnableVertexAttribArray(6);
    glVertexAttribPointer(6, 4, GL_FLOAT, GL_FALSE, sizeof(GeometryVertex), (void*)offsetof(GeometryVertex, weights));
    glBindVertexArray(0);
    this->hasBoundingSphereInformation = true;
    this->boundingSpherePosition = vec3(0.0f);
    this->boundingSphereRadius = 1.0f;
}
